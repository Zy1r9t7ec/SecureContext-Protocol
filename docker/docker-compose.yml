version: '3.8'

services:
  scp-app:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: scp-authentication-proxy
    ports:
      - "${SCP_PORT:-5000}:5000"
    environment:
      # Flask Configuration
      - FLASK_SECRET_KEY=${FLASK_SECRET_KEY}
      - FLASK_ENV=${FLASK_ENV:-production}
      - FLASK_HOST=0.0.0.0
      - FLASK_PORT=5000
      - FLASK_DEBUG=${FLASK_DEBUG:-false}
      
      # Enterprise Configuration
      - SCP_BASE_URL=${SCP_BASE_URL:-http://localhost:5000}
      - SCP_CALLBACK_URL_OVERRIDE=${SCP_CALLBACK_URL_OVERRIDE}
      - SCP_ENVIRONMENT=${SCP_ENVIRONMENT:-production}
      
      # Webhook Configuration
      - SCP_ENABLE_WEBHOOKS=${SCP_ENABLE_WEBHOOKS:-false}
      - SCP_WEBHOOK_URL=${SCP_WEBHOOK_URL}
      - SCP_WEBHOOK_SECRET=${SCP_WEBHOOK_SECRET}
      - SCP_WEBHOOK_EVENTS=${SCP_WEBHOOK_EVENTS:-token_created,token_retrieved,token_expired}
      - SCP_WEBHOOK_TIMEOUT=${SCP_WEBHOOK_TIMEOUT:-30}
      - SCP_WEBHOOK_RETRY_COUNT=${SCP_WEBHOOK_RETRY_COUNT:-3}
      - SCP_WEBHOOK_RETRY_DELAY=${SCP_WEBHOOK_RETRY_DELAY:-5}
      
      # OAuth Provider Configuration
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - MICROSOFT_CLIENT_ID=${MICROSOFT_CLIENT_ID}
      - MICROSOFT_CLIENT_SECRET=${MICROSOFT_CLIENT_SECRET}
      
      # Security Configuration
      - SESSION_COOKIE_SECURE=${SESSION_COOKIE_SECURE:-true}
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - scp-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/enterprise/config"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Redis for production token storage
  scp-redis:
    image: redis:7-alpine
    container_name: scp-redis
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - scp-network
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-}
    profiles:
      - redis

  # Optional: Nginx reverse proxy
  scp-nginx:
    image: nginx:alpine
    container_name: scp-nginx
    ports:
      - "${NGINX_HTTP_PORT:-80}:80"
      - "${NGINX_HTTPS_PORT:-443}:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - scp-app
    restart: unless-stopped
    networks:
      - scp-network
    profiles:
      - nginx

volumes:
  redis-data:

networks:
  scp-network:
    driver: bridge